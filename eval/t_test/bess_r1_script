import scapy.all as scapy

print 'Adding sink'
sink = Sink()

print 'Adding ports and inc/out modules'
# runtime 1:
# iport_mac: 52:54:01:01:00:01
# oport_mac: 52:54:01:01:00:02
# cport_mac: 52:54:01:01:00:03
rt1_iport = ZeroCopyVPort(name='rt1_iport')
rt1_oport = ZeroCopyVPort(name='rt1_oport')
rt1_cport = ZeroCopyVPort(name='rt1_cport')

rt1_iport_portinc::PortInc(port=rt1_iport)
rt1_iport_portout::PortOut(port=rt1_iport)
rt1_oport_portinc::PortInc(port=rt1_oport)
rt1_oport_portout::PortOut(port=rt1_oport)
rt1_cport_portinc::PortInc(port=rt1_cport)
rt1_cport_portout::PortOut(port=rt1_cport)

# runtime 2:
# iport_mac: 52:54:01:02:00:01
# oport_mac: 52:54:01:02:00:02
# cport_mac: 52:54:01:02:00:03
rt2_iport = ZeroCopyVPort(name='rt2_iport')
rt2_oport = ZeroCopyVPort(name='rt2_oport')
rt2_cport = ZeroCopyVPort(name='rt2_cport')

rt2_iport_portinc::PortInc(port=rt2_iport)
rt2_iport_portout::PortOut(port=rt2_iport)
rt2_oport_portinc::PortInc(port=rt2_oport)
rt2_oport_portout::PortOut(port=rt2_oport)
rt2_cport_portinc::PortInc(port=rt2_cport)
rt2_cport_portout::PortOut(port=rt2_cport)

# runtime 3:
# iport_mac: 52:54:01:03:00:01
# oport_mac: 52:54:01:03:00:02
# cport_mac: 52:54:01:03:00:03
rt3_iport = ZeroCopyVPort(name='rt3_iport')
rt3_oport = ZeroCopyVPort(name='rt3_oport')
rt3_cport = ZeroCopyVPort(name='rt3_cport')

rt3_iport_portinc::PortInc(port=rt3_iport)
rt3_iport_portout::PortOut(port=rt3_iport)
rt3_oport_portinc::PortInc(port=rt3_oport)
rt3_oport_portout::PortOut(port=rt3_oport)
rt3_cport_portinc::PortInc(port=rt3_cport)
rt3_cport_portout::PortOut(port=rt3_cport)

# runtime 4:
# iport_mac: 52:54:01:04:00:01
# oport_mac: 52:54:01:04:00:02
# cport_mac: 52:54:01:04:00:03
rt4_iport = ZeroCopyVPort(name='rt4_iport')
rt4_oport = ZeroCopyVPort(name='rt4_oport')
rt4_cport = ZeroCopyVPort(name='rt4_cport')

rt4_iport_portinc::PortInc(port=rt4_iport)
rt4_iport_portout::PortOut(port=rt4_iport)
rt4_oport_portinc::PortInc(port=rt4_oport)
rt4_oport_portout::PortOut(port=rt4_oport)
rt4_cport_portinc::PortInc(port=rt4_cport)
rt4_cport_portout::PortOut(port=rt4_cport)

# runtime 5:
# iport_mac: 52:54:01:05:00:01
# oport_mac: 52:54:01:05:00:02
# cport_mac: 52:54:01:05:00:03
rt5_iport = ZeroCopyVPort(name='rt5_iport')
rt5_oport = ZeroCopyVPort(name='rt5_oport')
rt5_cport = ZeroCopyVPort(name='rt5_cport')

rt5_iport_portinc::PortInc(port=rt5_iport)
rt5_iport_portout::PortOut(port=rt5_iport)
rt5_oport_portinc::PortInc(port=rt5_oport)
rt5_oport_portout::PortOut(port=rt5_oport)
rt5_cport_portinc::PortInc(port=rt5_cport)
rt5_cport_portout::PortOut(port=rt5_cport)

# runtime 6:
# iport_mac: 52:54:01:06:00:01
# oport_mac: 52:54:01:06:00:02
# cport_mac: 52:54:01:06:00:03
rt6_iport = ZeroCopyVPort(name='rt6_iport')
rt6_oport = ZeroCopyVPort(name='rt6_oport')
rt6_cport = ZeroCopyVPort(name='rt6_cport')

rt6_iport_portinc::PortInc(port=rt6_iport)
rt6_iport_portout::PortOut(port=rt6_iport)
rt6_oport_portinc::PortInc(port=rt6_oport)
rt6_oport_portout::PortOut(port=rt6_oport)
rt6_cport_portinc::PortInc(port=rt6_cport)
rt6_cport_portout::PortOut(port=rt6_cport)

print 'Adding Physical Port'
rt_pdport = PMDPort(name='rt_pdport', port_id=0)
rt_pcport = PMDPort(name='rt_pcport', port_id=1)

rt_pdport_portout::PortOut(port=rt_pdport)
rt_pdport_portinc::PortInc(port=rt_pdport)

rt_pcport_portout::PortOut(port=rt_pcport)
rt_pcport_portinc::PortInc(port=rt_pcport)


print 'Adding dp/cp l2forward'
dp_l2forward = L2Forward()
cp_l2forward = L2Forward()

print 'Adding dp/cp connections'

rt_pdport_portinc -> dp_l2forward
rt1_oport_portinc -> dp_l2forward
rt2_oport_portinc -> dp_l2forward
rt3_oport_portinc -> dp_l2forward
rt4_oport_portinc -> dp_l2forward
rt5_oport_portinc -> dp_l2forward
rt6_oport_portinc -> dp_l2forward

dp_l2forward:0 -> rt_pdport_portout
dp_l2forward:1 -> rt1_oport_portout
dp_l2forward:2 -> rt2_oport_portout
dp_l2forward:3 -> rt3_oport_portout
dp_l2forward:4 -> rt4_oport_portout
dp_l2forward:5 -> rt5_oport_portout
dp_l2forward:6 -> rt6_oport_portout


rt_pcport_portinc -> cp_l2forward
rt1_cport_portinc -> cp_l2forward
rt2_cport_portinc -> cp_l2forward
rt3_cport_portinc -> cp_l2forward
rt4_cport_portinc -> cp_l2forward
rt5_cport_portinc -> cp_l2forward
rt6_cport_portinc -> cp_l2forward

cp_l2forward:0 -> rt_pcport_portout
cp_l2forward:1 -> rt1_cport_portout
cp_l2forward:2 -> rt2_cport_portout
cp_l2forward:3 -> rt3_cport_portout
cp_l2forward:4 -> rt4_cport_portout
cp_l2forward:5 -> rt5_cport_portout
cp_l2forward:6 -> rt6_cport_portout


ret = dp_l2forward.add([
                        {'addr':'52:54:02:01:00:01', 'gate':0},
			                  {'addr':'52:54:02:02:00:01', 'gate':0},
		                    {'addr':'52:54:02:03:00:01', 'gate':0},
                        {'addr':'52:54:03:01:00:01', 'gate':0},
                        {'addr':'52:54:03:02:00:01', 'gate':0},
                        {'addr':'52:54:03:03:00:01', 'gate':0},
		                    {'addr':'52:54:01:04:00:02', 'gate':4},
		                    {'addr':'52:54:01:05:00:02', 'gate':5},
		                    {'addr':'52:54:01:06:00:02', 'gate':6},
		                    {'addr':'52:54:01:01:00:02', 'gate':1},
		                    {'addr':'52:54:01:02:00:02', 'gate':2},
		                    {'addr':'52:54:01:03:00:02', 'gate':3}])
assert ret is None, 'Incorrect response'
print 'adding dp_l2forward rule ok'

print 'Adding traffic generator module'
pkt_size = int($SN_PKT_SIZE!'60')
assert(60 <= pkt_size <= 1522)
eth = scapy.Ether(src='02:1e:67:9f:4d:ae', dst='06:16:3e:1b:72:32')
ip = scapy.IP(src='10.0.0.1', dst='10.0.0.2')   # dst IP is overwritten
tcp = scapy.TCP(sport=10001, dport=80)
payload = ('hello' + '0123456789' * 200)[:pkt_size-len(eth/ip/tcp)]
pkt = eth/ip/tcp/payload
pkt_data = bytearray(str(pkt))

fg1::FlowGen(template=pkt_data, pps=1e8, flow_rate = 1e4, flow_duration = 10.0, \
            arrival='exponential', duration='pareto', quick_rampup=1)
fg2::FlowGen(template=pkt_data, pps=1e8, flow_rate = 1e4, flow_duration = 10.0, \
            arrival='exponential', duration='pareto', quick_rampup=1)
fg3::FlowGen(template=pkt_data, pps=1e8, flow_rate = 1e4, flow_duration = 10.0, \
            arrival='exponential', duration='pareto', quick_rampup=1)
fg4::FlowGen(template=pkt_data, pps=1e8, flow_rate = 1e4, flow_duration = 10.0, \
            arrival='exponential', duration='pareto', quick_rampup=1)
fg5::FlowGen(template=pkt_data, pps=1e8, flow_rate = 1e4, flow_duration = 10.0, \
            arrival='exponential', duration='pareto', quick_rampup=1)
fg6::FlowGen(template=pkt_data, pps=1e8, flow_rate = 1e4, flow_duration = 10.0, \
            arrival='exponential', duration='pareto', quick_rampup=1)

bess.add_worker(5, 5)
bess.add_worker(6, 6)
bess.add_worker(7, 7)

bess.add_worker(10, 10)
bess.add_worker(11, 11)
bess.add_worker(12, 12)


bess.attach_task("fg1", 0, wid=5)
bess.attach_task("fg2", 0, wid=6)
bess.attach_task("fg3", 0, wid=7)
bess.attach_task("fg4", 0, wid=10)
bess.attach_task("fg5", 0, wid=11)
bess.attach_task("fg6", 0, wid=12)

bess.add_worker(8, 8)
bess.attach_task("rt1_oport_portinc", 0, wid=8)
bess.attach_task("rt2_oport_portinc", 0, wid=8)
bess.attach_task("rt3_oport_portinc", 0, wid=8)
bess.attach_task("rt4_oport_portinc", 0, wid=8)
bess.attach_task("rt5_oport_portinc", 0, wid=8)
bess.attach_task("rt6_oport_portinc", 0, wid=8)
bess.attach_task("rt_pdport_portinc", 0, wid=8)

bess.add_worker(9, 9)
bess.attach_task("rt1_cport_portinc", 0, wid=9)
bess.attach_task("rt2_cport_portinc", 0, wid=9)
bess.attach_task("rt3_cport_portinc", 0, wid=9)
bess.attach_task("rt4_cport_portinc", 0, wid=9)
bess.attach_task("rt5_cport_portinc", 0, wid=9)
bess.attach_task("rt6_cport_portinc", 0, wid=9)
bess.attach_task("rt_pcport_portinc", 0, wid=9)
